Menu="Utilities"
Icon="mediabuild.png"
Title="Media Build"
---
<?
/* Copyright 2015-2016 Andrew Zawadzki, CHBMB */

$mediaPaths['tempFiles']  = "/tmp/mediabuild";
$mediaPaths['sourcesURL'] = "https://raw.githubusercontent.com/Squidly271/mediabuild-sources/master/sources";
$mediaPaths['sources'] = $mediaPaths['tempFiles']."/sources.json";
$mediaPaths['reboot'] = $mediaPaths['tempFiles']."/reboot";

# set to true for separate menus, or false for all in one
# doesn't really work for true

$separate = false;  



function download_url($url, $path = "", $bg = false){
  exec("curl --max-time 60 --silent --insecure --location --fail ".($path ? " -o '$path' " : "")." $url ".($bg ? ">/dev/null 2>&1 &" : "2>/dev/null"), $out, $exit_code );
  return ($exit_code === 0 ) ? implode("\n", $out) : false;
}

exec('mkdir -p "'.$mediaPaths['tempFiles'].'"');

if ( is_file($mediaPaths['reboot']) )
{
  $reboot = "true";
}

download_url($mediaPaths['sourcesURL'],$mediaPaths['sources']);

$sources = json_decode(file_get_contents($mediaPaths['sources']),true);
$i = 0;
foreach ($sources as $source)
{
  $source['id'] = $i;
  if ( $source['imageType'] == "unRaid" )
  {
    $buttons['unRaid']['name'] = "unRaid";
    $buttons['unRaid']['builds'][] = $source;
  } else {
    if ( $separate )
    {
      $buttons[$source['imageType']]['name'] = $source['imageType'];
      $buttons[$source['imageType']]['builds'][] = $source;
    } else {
      $buttons['MediaBuilds']['name'] = "Media Builds";
      $buttons['MediaBuilds']['builds'][] = $source;
    }
  }
  $i = ++$i;
}

foreach ( $buttons as $button )
{
  if ( $button['name'] == "unRaid" )
  {
    $o .= "stock unRaid Builds: <select id='unRaid' onchange='showDescription0(value);'>";
  } else {
    $o = "Media Builds: <select id='Media' onchange='showDescription1(value);'>";
  }

  $o .= "<option value='default' disabled selected>Select an image to install</option>";
  foreach ($button['builds'] as $option)
  {
    $o .= '<option value="'.$option['id'].'" onselect="showDescription();">'.$option['imageType'].' '.$option['imageVersion'].'</option>';
  }
  $o .= "</select>";
}


?>


<script>

var URL = "/plugins/mediabuild/include/exec.php";

function showDescription0(build)
{
  document.getElementById("Media").selectedIndex = 0;

  showDescription(build);
}

function showDescription1(build)
{
  document.getElementById("unRaid").selectedIndex = 0;

  showDescription(build);
}

function showDescription(build)
{
  $("#install").prop("disabled",false);

  $.post(URL,{action:'show_description',build:build},function(data)
  {
    if (data)
    {
      $("#description").html(data);
    }
  });
}

function installBuild(build)
{
  swal({
    title: "Are you sure you want to install whatever it was that you clicked on?",
    type: "warning",
    closeOnConfirm: true,
    showLoaderOnConfirm: true,
    showCancelButton: true
  },
  function ()
  {
    openBox("/plugins/mediabuild/include/install.sh","Installing Build",400,400,true);
  });
}

$(function()
{

  if ( "<?=$reboot?>" == "true" )
  {
    $("#reboot").show();
  }
});

</script>

<strong><font color='red'>Very</font></strong> rough draft to demonstrate work flow


Currently Running:  stock unRaid version 6.1.7 

Available Media Builds:

<?=$o?>  <input type='button' id='install' disabled value='Install Build' onclick='installBuild();'></input>
<br><br>
<input type='button' value='Cancel' onclick='done();'>

Description:  <span id='description'></span>


<span id='reboot' hidden><font size='4' color='red'>Installation Complete, you must reboot your server</font></span>
</FORM>
